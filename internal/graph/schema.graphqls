scalar Time
scalar File

type TimeRecord {
  id: ID!
  start: String!
  end: String!
  tags: [String!]!
}

type Task {
  id: ID!
  description: String!
  entry: String!
  modified: String!
  uuid: String!
  urgency: Float!
  status: String!
  priority: String!
  due: String!
  project: String!
  tags: [String!]!
}

type User {
  id: ID!
  username: String!
  password: String!
  createdAt: Time!
}

type SignInPayload {
  token: String!
  user: User!
}

type Query {
  timeRecords: [TimeRecord!]!
  timeTags: [String!]!
  me: User!

  tasks: [Task!]!
}

type Mutation {
  timeStart: TimeRecord!
  timeStop: TimeRecord!
  deleteTimeRecord(id: ID!): TimeRecord!
  modifyTimeRecordDate(id: ID!, start: String, end: String): TimeRecord!
  tagTimeRecord(id: ID!, tag: String!): TimeRecord!
  untagTimeRecord(id: ID!, tag: String!): TimeRecord!

  createTask(description: String!, project: String, priority: String, due: String): Task!

  signIn(username: String!, password: String!): SignInPayload!
  signUp(username: String!, password: String!): SignInPayload!
  signOut: Boolean!

  downloadTaskKeys: String!
  uploadTimeWarriorKey(key: String!): Boolean!
}
